/*
 * API SD
 *
 * API SD
 *
 * OpenAPI spec version: 1.0.0
 * Contact: lac56@gcloud.ua.es
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;
using MySql.Data.MySqlClient;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class RegistroApiController : ControllerBase
    {
        private MySqlConnection conn;

        private string generarToken()
        {
            string cadena = "";

            char[] muestra = { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',
                's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
                'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0' };
            Random random = new Random();
            int randomNumber1 = random.Next(0, 300);


            for (int x = 0; x < 43; x++)
            {
                int indiceAleatorio = random.Next(0, muestra.Length);
                cadena = cadena + muestra[indiceAleatorio];
            }

            return cadena;
        }

        /// <summary>
        /// registro
        /// </summary>
        /// <remarks>Borrar usuario </remarks>
        /// <param name="restKey"></param>
        /// <param name="nameUser"></param>
        /// <response code="204">usuario borrado correctamente</response>
        /// <response code="404">usuario no encontrado</response>
        [HttpDelete]
        [Route("/lac56-alu/SD-REGISTRY/1.0.0/borrarUsuario/{restKey}/{nameUser}")]
        [ValidateModelState]
        [SwaggerOperation("BorrarUsuarios")]
        public virtual IActionResult BorrarUsuarios([FromRoute][Required]string restKey, [FromRoute][Required]string nameUser)
        {
            string stringConexion = "server=localhost;port=3306;user id=luis;password=root;database=sd;SslMode=none";
            conn = new MySqlConnection(stringConexion);
            conn.Open();
            MySqlCommand cmd = new MySqlCommand();
            cmd.Connection = conn;
            InlineResponse200 resp = new InlineResponse200();

            cmd.CommandText = "SELECT * FROM sd.claves where name = '" + nameUser + "'";
            cmd.ExecuteNonQuery();
            MySqlDataReader readerKey = cmd.ExecuteReader();
            bool comprobarKey = false;

            while (readerKey.Read())
            {
                if (restKey == readerKey.GetString(1))
                {
                    comprobarKey = true;
                    break;
                }

            }

            if (comprobarKey)
            {
                try
                {
                    conn = new MySqlConnection(stringConexion);
                    conn.Open();
                    MySqlCommand cmd2 = new MySqlCommand();
                    cmd2.Connection = conn;
                    string sql = "DELETE FROM sd.usuarios where nombre='" + nameUser + "'";
                    cmd2.CommandText = sql;
                    cmd2.ExecuteNonQuery();
                    conn.Close();

                    conn.Open();
                    MySqlCommand cmd3 = new MySqlCommand();
                    cmd3.Connection = conn;
                    string token = generarToken();
                    cmd3.CommandText = "DELETE FROM sd.claves WHERE name='" + nameUser + "'";
                    cmd3.ExecuteNonQuery();

                    resp.Correcto = true;
                    resp.Cadena = "Usuario borrado correctamente";
                    conn.Close();

                }
                catch (MySqlException e)
                {
                    resp.Correcto = false;
                    resp.Cadena = "Error al realizar el modificar";
                    conn.Close();
                    return StatusCode(500, resp);
                }
            }
            else
            {
                resp.Correcto = false;
                resp.Cadena = "Error en la restKey";
                conn.Close();
                return StatusCode(404, resp);
            }

            return StatusCode(201, resp);
        }

        /// <summary>
        /// registro
        /// </summary>
        /// <remarks>Consultar Todos los Usuarios </remarks>
        /// <param name="restKey"></param>
        /// <response code="200">ok</response>
        /// <response code="404">no hay usuarios</response>
        [HttpGet]
        [Route("/lac56-alu/SD-REGISTRY/1.0.0/consultarTodosUsuarios/{restKey}")]
        [ValidateModelState]
        [SwaggerOperation("ConsultarTodosUsuarios")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "ok")]
        public virtual IActionResult ConsultarTodosUsuarios([FromRoute][Required]string restKey)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse200));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"correcto\" : true,\n  \"cadena\" : \"cadena\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
                        : default(InlineResponse200);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// registro
        /// </summary>
        /// <remarks>LogIn Usuario </remarks>
        /// <param name="body">Nuevo Usuario</param>
        /// <response code="200">usuario creado correctamente</response>
        /// <response code="404">error al hacer login</response>
        [HttpPost]
        [Route("/lac56-alu/SD-REGISTRY/1.0.0/login")]
        [ValidateModelState]
        [SwaggerOperation("Login")]
        public virtual IActionResult Login([FromBody]UserItem body)
        {
            string stringConexion = "server=localhost;port=3306;user id=luis;password=root;database=sd;SslMode=none";
            InlineResponse200 resp = new InlineResponse200();
            try
            {
                conn = new MySqlConnection(stringConexion);
                conn.Open();
                MySqlCommand cmd2 = new MySqlCommand();
                cmd2.Connection = conn;
                cmd2.CommandText = "SELECT * FROM sd.usuarios WHERE nombre='" + body.Name.ToString() + "' and password='" + body.Password.ToString() + "'";
                cmd2.ExecuteNonQuery();

                MySqlDataReader readerKey = cmd2.ExecuteReader();
                bool comprobar = false;

                while (readerKey.Read())
                {
                    if (body.Name.ToString() == readerKey.GetString(1) && body.Password.ToString() == readerKey.GetString(2))
                    {
                        comprobar = true;
                        break;
                    }

                }
                
                if (comprobar)
                {
                    resp.Correcto = true;
                    resp.Cadena = "Usuario logeado correctamente";
                    
                }
                else
                {
                    resp.Correcto = false;
                    resp.Cadena = "Credenciales Incorrectas";
                    return StatusCode(404, resp);
                }

                conn.Close();
            }
            catch (MySqlException e)
            {
                resp.Correcto = false;
                resp.Cadena = "Error al realizar el crear";
                conn.Close();
                return StatusCode(500, resp);
            }

            return StatusCode(201, resp);
        }

        /// <summary>
        /// registro
        /// </summary>
        /// <remarks>Modificar usuario </remarks>
        /// <param name="restKey"></param>
        /// <param name="body">Modificar Usuario</param>
        /// <response code="201">usuario modificado correctamente</response>
        /// <response code="404">sala no encontrada</response>
        [HttpPut]
        [Route("/lac56-alu/SD-REGISTRY/1.0.0/modificarUsuario/{restKey}")]
        [ValidateModelState]
        [SwaggerOperation("ModificarUsuario")]
        public virtual IActionResult ModificarUsuario([FromRoute][Required]string restKey, [FromBody]UserItemMod body)
        {
            string stringConexion = "server=localhost;port=3306;user id=luis;password=root;database=sd;SslMode=none";
            conn = new MySqlConnection(stringConexion);
            conn.Open();
            MySqlCommand cmd = new MySqlCommand();
            cmd.Connection = conn;
            InlineResponse200 resp = new InlineResponse200();

            cmd.CommandText = "SELECT * FROM sd.claves where name = '" + body.Name + "'";
            cmd.ExecuteNonQuery();
            MySqlDataReader readerKey = cmd.ExecuteReader();
            bool comprobarKey = false;

            while (readerKey.Read())
            {
                if (restKey == readerKey.GetString(1))
                {
                    comprobarKey = true;
                    break;
                }

            }

            if (comprobarKey)
            {
                try
                {
                    conn = new MySqlConnection(stringConexion);
                    conn.Open();
                    MySqlCommand cmd2 = new MySqlCommand();
                    cmd2.Connection = conn;
                    string sql = "UPDATE sd.usuarios SET password='" + body.NewPassword.ToString() + "' where nombre='" + body.Name.ToString() + "' and password='" + body.OldPassword.ToString() + "'";
                    cmd2.CommandText = sql;
                    cmd2.ExecuteNonQuery();

                    resp.Correcto = true;
                    resp.Cadena = "Se ha modificado el usuario";
                    conn.Close();

                }
                catch (MySqlException e)
                {
                    resp.Correcto = false;
                    resp.Cadena = "Error al realizar el modificar";
                    conn.Close();
                    return StatusCode(500, resp);
                }
            }
            else
            {
                resp.Correcto = false;
                resp.Cadena = "Error en la restKey";
                conn.Close();
                return StatusCode(404, resp);
            }

            return StatusCode(201, resp);
        }

        /// <summary>
        /// registro
        /// </summary>
        /// <remarks>Crear usuarios </remarks>
        /// <param name="body">Nuevo Usuario</param>
        /// <response code="201">usuario creado correctamente</response>
        /// <response code="400">bad input parameter</response>
        [HttpPost]
        [Route("/lac56-alu/SD-REGISTRY/1.0.0/nuevoUsuario")]
        [ValidateModelState]
        [SwaggerOperation("NuevoUsuario")]
        public virtual IActionResult NuevoUsuario([FromBody]UserItem body)
        {
            string stringConexion = "server=localhost;port=3306;user id=luis;password=root;database=sd;SslMode=none";
            InlineResponse200 resp = new InlineResponse200();
            try
            {
                conn = new MySqlConnection(stringConexion);
                conn.Open();
                MySqlCommand cmd2 = new MySqlCommand();
                cmd2.Connection = conn;
                cmd2.CommandText = "INSERT INTO sd.usuarios (nombre, password) VALUES ('" + body.Name.ToString() + "', '" + body.Password.ToString() + "')";
                cmd2.ExecuteNonQuery();
                conn.Close();

                conn.Open();
                MySqlCommand cmd3 = new MySqlCommand();
                cmd3.Connection = conn;
                string token = generarToken();
                cmd3.CommandText = "INSERT INTO sd.claves (name, clave) VALUES ('" + body.Name.ToString() + "', '" + token + "')";
                cmd3.ExecuteNonQuery();

                resp.Correcto = true;
                resp.Cadena = "Correcto, token: " + token;
                conn.Close();


            }
            catch (MySqlException e)
            {
                resp.Correcto = false;
                resp.Cadena = "Error al realizar el crear";
                conn.Close();
                return StatusCode(500, resp);
            }

            return StatusCode(201, resp);
        }
    }
}
