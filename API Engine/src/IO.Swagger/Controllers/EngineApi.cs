/*
 * API SD ENGINE
 *
 * API SD ENGINE
 *
 * OpenAPI spec version: 1.0.0
 * Contact: lac56@gcloud.ua.es
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;
using MySql.Data.MySqlClient;
using System.Linq;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class EngineApiController : ControllerBase
    {
        private MySqlConnection conn;
        /// <summary>
        /// engine
        /// </summary>
        /// <remarks>Modificar usuario </remarks>
        /// <param name="posicion"></param>
        /// <param name="ciudad"></param>
        /// <response code="202">Ciudad modificada correctamente</response>
        /// <response code="404">No se ha encontrado el cuadrante</response>
        [HttpPut]
        [Route("/lac56-alu/SD-ENGINE/1.0.0/modificarCuadrante/{posicion}/{ciudad}")]
        [ValidateModelState]
        [SwaggerOperation("ModificarUsuario")]
        public virtual IActionResult ModificarUsuario([FromRoute][Required]string posicion, [FromRoute][Required]string ciudad)
        { 
            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }

        /// <summary>
        /// engine
        /// </summary>
        /// <remarks>Mostrar las ciudades de los cuadrantes </remarks>
        /// <response code="202">respuesta</response>
        /// <response code="400">No hay ciudades</response>
        [HttpGet]
        [Route("/lac56-alu/SD-ENGINE/1.0.0/mostrarCiudades")]
        [ValidateModelState]
        [SwaggerOperation("MostrarCiudades")]
        [SwaggerResponse(statusCode: 202, type: typeof(InlineResponse202), description: "respuesta")]
        public virtual IActionResult MostrarCiudades()
        {
            string[] ciudades = {};
            List<string> list = new List<string>(ciudades.ToList());
            
            string stringConexion = "server=localhost;port=3306;user id=luis;password=root;database=sd;SslMode=none";
            InlineResponse202 resp = new InlineResponse202();
            try
            {
                conn = new MySqlConnection(stringConexion);
                conn.Open();
                MySqlCommand cmd2 = new MySqlCommand();
                cmd2.Connection = conn;
                cmd2.CommandText = "SELECT * FROM sd.cuadrantes";
                cmd2.ExecuteNonQuery();

                MySqlDataReader readerKey = cmd2.ExecuteReader();
                bool comprobar = false;

                while (readerKey.Read())
                {
                    list.Add(readerKey.GetString(1));
                }

                if (list.Count == 0)
                {
                    resp.Correcto = false;
                    resp.Cadena = "No hay ciudades";
                    return StatusCode(404, resp);
                }

                var result = String.Join(", ", list.ToArray());
                resp.Correcto = true;
                resp.Cadena = result;

                conn.Close();
            }
            catch (MySqlException e)
            {
                resp.Correcto = false;
                resp.Cadena = "Error al realizar el crear";
                conn.Close();
                return StatusCode(500, resp);
            }

            return StatusCode(202, resp);
        }

        /// <summary>
        /// engine
        /// </summary>
        /// <remarks>Mostrar el mapa </remarks>
        /// <response code="202">respuesta</response>
        /// <response code="400">No hay mapa</response>
        [HttpGet]
        [Route("/lac56-alu/SD-ENGINE/1.0.0/mostrarMapa")]
        [ValidateModelState]
        [SwaggerOperation("MostrarMapa")]
        [SwaggerResponse(statusCode: 202, type: typeof(InlineResponse202), description: "respuesta")]
        public virtual IActionResult MostrarMapa()
        { 
            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(InlineResponse202));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "{\n  \"correcto\" : true,\n  \"cadena\" : \"cadena\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse202>(exampleJson)
                        : default(InlineResponse202);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// engine
        /// </summary>
        /// <remarks>Mostrar las temperaturas del mapa </remarks>
        /// <response code="202">respuesta</response>
        /// <response code="400">No hay mapa</response>
        [HttpGet]
        [Route("/lac56-alu/SD-ENGINE/1.0.0/mostrarTemperaturas")]
        [ValidateModelState]
        [SwaggerOperation("MostrarTemperaturas")]
        [SwaggerResponse(statusCode: 202, type: typeof(InlineResponse202), description: "respuesta")]
        public virtual IActionResult MostrarTemperaturas()
        { 
            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(InlineResponse202));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "{\n  \"correcto\" : true,\n  \"cadena\" : \"cadena\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse202>(exampleJson)
                        : default(InlineResponse202);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
